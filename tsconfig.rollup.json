{
  // https://www.typescriptlang.org/tsconfig
  // https://github.com/tsconfig/bases/tree/main/bases

  // 공통 모듈을 뽑으려면
  // common, client, server 각 모듈 루트에 tsconfig.js 가 하나씩 넣고
  // 레퍼런스로 연결해야 한다.
  //
  // TypeScript 에서 권장하기도 하고,
  // 이렇게 해야 WebStorm 이 적절히 동작한다.
  //
  // 하지만 2021-10-29일 기준, Rollup 이 레퍼런스로 연결된 프로젝트를 빌드하지 못한다.
  // 해서 모듈별 tsconfig.json 외에 Rollup 을 위한 전용 tsconfig 를 루트에 생성했다.
  // 이 파일은 rollup 용으로만 사용된다.

  "compilerOptions": {
    "outDir": "build/rollup",
    "rootDir": "src/ts",

    // paths 를 쓰려면 baseUrl 을 설정해야 한다.
    // baseUrl 은 tsconfig.json 파일 위치가 기준이다.
    "baseUrl": "src/ts",
    "paths": {
      "@client/*": ["client/*"],
      "@common/*": ["common/*"]
    },

    "target": "es2017", // async, await
    "module": "esnext",
    "lib": ["dom", "esnext"],

    "strict": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    "sourceMap": true
  },
  "include": [
    "src/ts/common/**/*",
    "src/ts/client/**/*"
  ],
}
